{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Loader/Loader.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","services/imageApi.js","components/Loader/Loader.js","components/SearchBar/SearchBar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/App/App.js","index.js","components/SearchBar/SearchBar.module.css","components/App/App.module.css"],"names":["module","exports","api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","Error","LoaderSpiner","className","s","Loader","type","color","height","width","SearchBarHooks","onSubmit","useState","setName","Searchbar","SearchForm","e","preventDefault","trim","toast","warn","SearchFormButton","SearchFormButtonLabel","onChange","currentTarget","value","toLowerCase","SearchFormInput","placeholder","ImageGalleryItem","webformatURL","tags","openModal","onClick","src","alt","ImageGalleryItemImage","ImageGallery","images","map","id","largeImageURL","Button","ModalRoot","document","querySelector","ModalHooks","onClose","image","useEffect","window","addEventListener","handleKeyPress","removeEventListener","code","createPortal","overlay","target","role","modal","AppHooks","imageName","setImageName","setPage","setImages","status","setStatus","selectedImage","setSelectedImage","modalIsOpen","setModalIsOpen","data","hits","pictures","length","error","prevImages","scrollTo","top","body","scrollHeight","behavior","catch","formSubmit","onLoadMore","prevState","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.3e3e49bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3CvRl\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2bkPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2GjdW\",\"modal\":\"Modal_modal__P3_V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__17sQZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","function fetchImages(name, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=22561247-42ee984dc1f8b66c15ccf3de0&orientation=horizontal&per_page=12`\n  ).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`There is no images with name ${name}`));\n  });\n}\nconst api = { fetchImages };\nexport default api;\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport s from \"../Loader/Loader.module.css\";\n\nexport default function LoaderSpiner() {\n  return (\n    <div className={s.Loader}>\n      <Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport s from \"./SearchBar.module.css\";\n\nexport default function SearchBarHooks({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    setName(e.currentTarget.value.toLowerCase());\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.trim() === \"\") {\n      toast.warn(\"Enter valid name,please!\");\n      return;\n    }\n    onSubmit(name);\n    setName(\"\");\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}></span>\n        </button>\n\n        <input\n          onChange={handleNameChange}\n          className={s.SearchFormInput}\n          type=\"text\"\n          value={name}\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\n// export default class SearchBar extends Component {\n//   state = {\n//     imageName: \"\",\n//   };\n//   handleNameChange = (e) => {\n//     this.setState({ imageName: e.currentTarget.value.toLowerCase() });\n//   };\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (this.state.imageName.trim() === \"\") {\n//       return toast.error(\"Enter valid name,please!\");\n//     }\n//     this.props.onSubmit(this.state.imageName);\n//     this.setState({ imageName: \"\" });\n//   };\n\n//   render() {\n//     return (\n//       <header className={s.Searchbar}>\n//         <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n//           <button type=\"submit\" className={s.SearchFormButton}>\n//             <span className={s.SearchFormButtonLabel}></span>\n//           </button>\n\n//           <input\n//             onChange={this.handleNameChange}\n//             className={s.SearchFormInput}\n//             type=\"text\"\n//             value={this.state.imageName}\n//             placeholder=\"Search images and photos\"\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n","import React from \"react\";\nimport s from \"../ImageGalleryItem/ImageGalleryItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function ImageGalleryItem({ webformatURL, tags, openModal }) {\n  return (\n    <li onClick={openModal} className={s.ImageGalleryItem}>\n      <img src={webformatURL} alt={tags} className={s.ImageGalleryItemImage} />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n","import ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport s from \"./ImageGallery.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGallery = ({ images, openModal }) => {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n        <ImageGalleryItem\n          key={id}\n          tags={tags}\n          webformatURL={webformatURL}\n          openModal={() => openModal(largeImageURL, tags)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport s from \"./Button.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function Button({ onClick }) {\n  return (\n    <button type=\"button\" onClick={onClick} className={s.Button}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport s from \"./Modal.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ModalRoot = document.querySelector(\"#modal-root\");\n\nexport default function ModalHooks({ onClose, image }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  });\n\n  const handleKeyPress = (e) => {\n    if (e.code !== \"Escape\") {\n      return;\n    }\n    onClose();\n  };\n\n  const handleBackdropClick = (e) => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onClose();\n  };\n\n  return createPortal(\n    <div\n      className={s.overlay}\n      onClick={handleBackdropClick}\n      role=\"presentation\"\n    >\n      <div className={s.modal}>\n        <img src={image.src} alt={image.alt} />\n      </div>\n    </div>,\n    ModalRoot\n  );\n}\nModalHooks.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  image: PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport api from \"../../services/imageApi\";\nimport LoaderSpiner from \"../Loader/Loader\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\nimport Button from \"../Button/Button\";\nimport Modal from \"../Modal/Modal\";\nimport s from \"../App/App.module.css\";\n\nexport default function AppHooks() {\n  const [imageName, setImageName] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [status, setStatus] = useState(\"idle\");\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  useEffect(() => {\n    if (!imageName) {\n      return;\n    }\n\n    setStatus(\"pending\");\n    api\n      .fetchImages(imageName, page)\n      .then((data) => data.hits)\n      .then((pictures) => {\n        if (pictures.length === 0) {\n          setStatus(\"rejected\");\n          toast.error(`'${imageName}' not found!`);\n        }\n\n        setImages((prevImages) => [...prevImages, ...pictures]);\n\n        setStatus(\"resolved\");\n        if (page > 1) {\n          window.scrollTo({\n            top: document.body.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      })\n      .catch((error) => {\n        setStatus(\"rejected\");\n      });\n  }, [imageName, page]);\n\n  const resetState = () => {\n    setImageName(\"\");\n    setPage(1);\n    setImages([]);\n    setSelectedImage(null);\n    setStatus(\"idle\");\n    setModalIsOpen(false);\n  };\n\n  const formSubmit = (imageName) => {\n    resetState();\n    setImageName(imageName);\n  };\n  const openModal = (src, alt) => {\n    setModalIsOpen(true);\n    setSelectedImage({ src, alt });\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n  const onLoadMore = () => {\n    setPage((prevState) => prevState + 1);\n  };\n  if (status === \"idle\") {\n    return (\n      <div className={s.App}>\n        <SearchBar onSubmit={formSubmit} />\n        <ToastContainer />\n      </div>\n    );\n  }\n  if (status === \"pending\") {\n    return (\n      <div className={s.App}>\n        <SearchBar onSubmit={formSubmit} />\n        <ImageGallery openModal={openModal} images={images} />\n        <LoaderSpiner />\n        {images.length > 0 && <Button onClick={onLoadMore} />}\n      </div>\n    );\n  }\n  if (status === \"rejected\") {\n    return (\n      <div className={s.App}>\n        <SearchBar onSubmit={formSubmit} />\n      </div>\n    );\n  }\n  if (status === \"resolved\") {\n    return (\n      <div className={s.App}>\n        <SearchBar onSubmit={formSubmit} />\n        <ImageGallery openModal={openModal} images={images} />\n        {images.length > 0 && <Button onClick={onLoadMore} />}\n        {modalIsOpen && <Modal image={selectedImage} onClose={closeModal} />}\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\n// export default class App extends Component {\n//   state = {\n//     imageName: \"\",\n//     page: 1,\n//     images: [],\n//     modalIsOpen: false,\n//     selectedImage: null,\n//     status: \"idle\",\n//     error: null,\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const { imageName, page } = this.state;\n//     if (prevState.imageName !== imageName || prevState.page !== page) {\n//       this.setState({ status: \"pending\" });\n\n//       api\n//         .fetchImages(imageName, page)\n//         .then((data) => data.hits)\n//         .then((pictures) =>\n//           this.setState((prevState) => ({\n//             images: [...prevState.images, ...pictures],\n//             status: \"resolved\",\n//           }))\n//         )\n//         .catch((error) => this.setState({ error, status: \"rejected\" }));\n//     }\n//     if (this.state.page > 1) {\n//       window.scrollTo({\n//         top: document.body.scrollHeight,\n//         behavior: \"smooth\",\n//       });\n//     }\n//   }\n\n//   resetState = () => {\n//     this.setState({\n//       imageName: \"\",\n//       page: 1,\n//       images: [],\n//       selectedImage: null,\n//       status: \"idle\",\n//     });\n//   };\n\n//   handleFormSubmit = (imageName) => {\n//     this.resetState();\n//     this.setState({ imageName });\n//   };\n\n//   openModal = (src, alt) => {\n//     this.setState({\n//       modalIsOpen: true,\n//       selectedImage: { src, alt },\n//     });\n//   };\n\n//   closeModal = () => this.setState({ modalIsOpen: false });\n\n//   onLoadMore = () => {\n//     this.setState((prevState) => ({ page: prevState.page + 1 }));\n//   };\n\n//   render() {\n//     const { images, error, status, selectedImage, modalIsOpen } = this.state;\n\n//     if (status === \"idle\") {\n//       return (\n//         <div className={s.App}>\n//           <SearchBar onSubmit={this.handleFormSubmit} />\n//         </div>\n//       );\n//     }\n//     if (status === \"pending\") {\n//       return (\n//         <div className={s.App}>\n//           <SearchBar onSubmit={this.handleFormSubmit} />\n//           <ImageGallery openModal={this.openModal} images={images} />\n//           <LoaderSpiner />\n//           {images.length > 0 && <Button onClick={this.onLoadMore} />}\n//         </div>\n//       );\n//     }\n//     if (status === \"rejected\") {\n//       return (\n//         <div className={s.App}>\n//           <SearchBar onSubmit={this.handleFormSubmit} />\n//           <h1>{error.message}</h1>\n//         </div>\n//       );\n//     }\n//     if (status === \"resolved\") {\n//       return (\n//         <div className={s.App}>\n//           <SearchBar onSubmit={this.handleFormSubmit} />\n//           <ImageGallery openModal={this.openModal} images={images} />\n//           {images.length > 0 && <Button onClick={this.onLoadMore} />}\n//           {modalIsOpen && (\n//             <Modal image={selectedImage} onClose={this.closeModal} />\n//           )}\n//           <ToastContainer />\n//         </div>\n//       );\n//     }\n//   }\n// }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"../src/components/App/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__19WMJ\",\"SearchForm\":\"SearchBar_SearchForm__1k1JW\",\"SearchFormButton\":\"SearchBar_SearchFormButton__3W9N5\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__2bY4N\",\"SearchFormInput\":\"SearchBar_SearchFormInput__17jtp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__aOmNj\"};"],"sourceRoot":""}